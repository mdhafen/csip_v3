<?php
// Make sure all class definitions are loaded before this!
session_name( 'CSIPSESSID' );
session_start();
$config = array(
	'base_dir'          => '/var/www/',  // sane defaults
	'base_url'	    => '/', // these are set below
	'secure_phrase'     => 'SetYourOwnHashSaltHere',
	'cookie_token_name' => 'CSIPTOKEN',
	'authen_modules'      => array(
		'db'       => 'core',
		'external' => '',
		'ldap'     => 0,
	),
	'trusted_proxies'   => array(),
	'database'          => array(
		'core' => array(
			'write' => array(
				'engine' => 'mysql',
				'host'   => 'localhost',
				'schema' => 'csip',
				'user'   => 'csip',
				'passwd' => 'password',
			),
		),
		'PS' => array(
			'write' => array(
				'engine' => 'oci',
				'host'   => 'psdb',
				'schema' => '',
				'user'   => '',
				'passwd' => '',
			),
		),
	),
	'auth' => array(
		1   => "load_csip",
		2   => "load_other_csip",
		4   => "view_protected_answers",
		8   => "update_csip",
		16   => "approve_csip",
		32  => "view_reports",
		64  => "manage_users",
	),
	'role' => array(
		1 => array(
			'name' => 'community council',
			'auth' => 33, // load,report
		),
		2 => array(
			'name' => 'plc member',
			'auth' => 13, // load,answers,update_csip
		),
		3 => array(
			'name' => 'principal',
			'auth' => 53, // load,answers,approve,report
		),
		4 => array(
			'name' => 'district personel',
			'auth' => 39, // load,load_other,answers,report
		),
		5 => array(
			'name' => 'board member',
			'auth' => 35, // load,load_other,report
		),
		6 => array(
			'name' => 'site supervisor',
			'auth' => 127, // all
		),
	),
);

$config['base_dir'] = realpath( dirname( __FILE__ ) . '/..' );
$config['this_url'] = $_SERVER['REQUEST_URI'];

$dir = $config['base_dir'] . '/webroot/';
$count = 1;
$lcs = '/';
while ( strripos( $dir, substr( $config['this_url'], 0, $count ) ) > 0 ) {
	$lcs = substr( $config['this_url'], 0, $count );
	if ( $count+1 > mb_strlen( $config['this_url'] ) ) { break; }
	$count = strpos( $config['this_url'], '/', $count + 1 );
	if ( $count < 0 ) { break; }
}

/*
 These next two are to catch load balancers (reverse proxies).
 You may have to set X-Forwarded-Port and X-Forwarded-Proto
 in the load balancer config
  apache2: RequestHeader set X-Forwarded-Proto https

 Also, these should be secured in the server config to be rejected in headers
 except from certain trusted clients (the load balancers)
  (anything from the client, like these, can be easily spoofed
 */
if ( ! empty($config['trusted_proxies']) && array_search($_SERVER['REMOTE_ADDR'],$config['trusted_proxies']) !== false ) {
	if ( isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https' || isset($_SERVER['HTTP_X_FORWARDED_SSL']) && $_SERVER['HTTP_X_FORWARDED_SSL'] == 'on' ) {
		$host = "https://". $_SERVER['HTTP_X_FORWAREDED_SERVER'];
		if ( isset($_SERVER['HTTP_X_FORWARDED_PORT']) && $_SERVER['HTTP_X_FORWARDED_PORT'] != '443' ) {
			$host .= ':'. $_SERVER['HTTP_X_FORWARDED_PORT'];
		}
	}
	else if ( isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'http' ) {
		$host = "http://". $_SERVER['HTTP_X_FORWAREDED_SERVER'];
		if ( isset($_SERVER['HTTP_X_FORWARDED_PORT']) && $_SERVER['HTTP_X_FORWARDED_PORT'] != '80' ) {
			$host .= ':'. $_SERVER['HTTP_X_FORWARDED_PORT'];
		}
	}
}
else if ( isset( $_SERVER['HTTPS'] ) && $_SERVER['HTTPS'] != 'off' ) {
	$host = "https://". $_SERVER['SERVER_NAME'];
	if ( $_SERVER['SERVER_PORT'] != '443' ) {
		$host .= ':'. $_SERVER['SERVER_PORT'];
	}
}
else {
	$host = "http://". $_SERVER['SERVER_NAME'];
	if ( $_SERVER['SERVER_PORT'] != '80' ) {
		$host .= ':'. $_SERVER['SERVER_PORT'];
	}
}
$config['base_url'] = $host . $lcs;
if ( substr( $config['base_url'], -1, 1 ) != '/' ) {
	$config['base_url'] .= '/';
}
?>
