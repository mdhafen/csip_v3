<?php
require_once( $config['base_dir'] ."/lib/data.phpm" );

function delete_location_dependants( $locationid ) {
  $dbh = db_connect();

  if ( $locationid ) {
    $query = "DELETE FROM user_course_links WHERE locationid = :lid";
    $sth = $dbh->prepare( $query );
    $sth->bindValue( ':lid', $locationid );
    $sth->execute();

    $query = "DELETE FROM location_course_links WHERE locationid = :lid";
    $sth = $dbh->prepare( $query );
    $sth->bindValue( ':lid', $locationid );
    $sth->execute();

    $query = "SELECT csipid FROM csip WHERE locationid = :lid";
    $sth = $dbh->prepare( $query );
    $sth->bindValue( ':lid', $locationid );
    $sth->execute();
    while ( $row = $sth->fetch() ) {
      $csips[] = $row['csipid'];
    }

    if ( count( $csips ) ) {
      $query = "DELETE FROM answer WHERE csipid IN (". implode( ',', $csips ) .")";
      $sth = $dbh->prepare( $query );
      $sth->execute();

      $query = "DELETE FROM course_approval WHERE csipid IN (". implode( ',', $csips ) .")";
      $sth = $dbh->prepare( $query );
      $sth->execute();

      $query = "DELETE FROM course_extra_part_links WHERE csipid IN (". implode( ',', $csips ) .")";
      $sth = $dbh->prepare( $query );
      $sth->execute();

      $query = "DELETE FROM csip WHERE locationid = :lid";
      $sth = $dbh->prepare( $query );
      $sth->bindValue( ':lid', $locationid );
      $sth->execute();
    }
  }
}

function get_location_num_dependants( $locationid ) {
  $dbh = db_connect();

  $result = array(
	'user' => 0,
	'csip' => 0,
	'course' => 0,
	'answer' => 0,
		  );
  if ( $locationid ) {
    $query = "SELECT COUNT(*) AS users FROM user_location_links WHERE locationid = :lid";
    $sth = $dbh->prepare( $query );
    $sth->bindValue( ':lid', $locationid );
    $sth->execute();
    $row = $sth->fetch();
    $result['user'] = $row['users'];

    $query = "SELECT COUNT(*) AS courses FROM location_course_links WHERE locationid = :lid";
    $sth = $dbh->prepare( $query );
    $sth->bindValue( ':lid', $locationid );
    $sth->execute();
    $row = $sth->fetch();
    $result['course'] = $row['courses'];

    $query = "SELECT csipid FROM csip WHERE locationid = :lid";
    $sth = $dbh->prepare( $query );
    $sth->bindValue( ':lid', $locationid );
    $sth->execute();
    while ( $row = $sth->fetch() ) {
      $csips[] = $row['csipid'];
    }
    $result['csip'] = count( $csips );

    if ( $result['csip'] ) {
      $query = "SELECT COUNT(*) AS answers FROM answer WHERE csipid IN (". implode( ',', $csips ) .")";
      $sth = $dbh->prepare( $query );
      $sth->execute();
      $row = $sth->fetch();
      $result['answer'] = $row['answers'];
    }
  }
  return $result;
}

function get_user_courses( $userid, $location ) {
    $dbh = db_connect();

    $courses = array();
    $query = "
    SELECT *
      FROM user_course_links
     WHERE locationid = :loc
       AND userid = :user
";
    $sth = $dbh->prepare( $query );
    $sth->bindValue( ':loc', $location );
    $sth->bindValue( ':user', $userid );
    $sth->execute();
    while ( $row = $sth->fetch( PDO::FETCH_ASSOC ) ) {
      $courses[ $row['courseid'] ] = $row;
    }

    return $courses;
}

function get_location_courses( $locationid, $mingrade = null, $maxgrade = null ) {
    $dbh = db_connect();

    $courses = array();

    if ( empty($mingrade) or empty($maxgrade) ) {
      $query = "
    SELECT mingrade, maxgrade
      FROM location
     WHERE locationid = :loc";
      $sth = $dbh->prepare( $query );
      $sth->bindValue( ':loc', $locationid );
      $sth->execute();
      list( $mingrade, $maxgrade ) = $sth->fetch( PDO::FETCH_NUM );
    }

    $query = "
    SELECT courseid
      FROM course
 LEFT JOIN location_course_links using (courseid)
     WHERE active = 1
       AND ( ( max_grade >= :mingrade AND min_grade <= :maxgrade )
        OR ( location_course_links.locationid = :loc ) )
";
    $sth = $dbh->prepare( $query );
    $sth->bindValue( ':mingrade', $mingrade );
    $sth->bindValue( ':maxgrade', $maxgrade );
    $sth->bindValue( ':loc', $locationid );
    $sth->execute();
    while ( $row = $sth->fetch( PDO::FETCH_ASSOC ) ) {
      $courses[] = $row['courseid'];
    }

    return $courses;
}

function user_add_course( $userid, $locationid, $courseid ) {
}

function user_delete_course( $userid, $locationid, $courseid ) {
}

?>
