<?php
require_once( $config['base_dir'] ."/lib/data.phpm" );
require_once( $config['base_dir'] ."/lib/security.phpm" );

require_once( "csips.phpm" );

function act_get_count_all_cat( $catid = 0, $csipid = 0 ) {
  if ( ! $catid || ! $csipid ) {
    return;
  }

  $dbh = db_connect();

  $query = "
    SELECT COUNT(*) AS total
      FROM activity
CROSS JOIN goal USING (goalid)
     WHERE csipid = :cid
       AND categoryid = :catid
";

  $sth = $dbh->prepare( $query );
  $sth->bindValue( ':cid', $csipid );
  $sth->bindValue( ':catid', $catid );
  $sth->execute();
  $result = $sth->fetch( PDO::FETCH_ASSOC );
  return $result['total'];
}

function act_get_count_completed_cat( $catid = 0, $csipid = 0 ) {
  if ( ! $catid || ! $csipid ) {
    return;
  }

  $dbh = db_connect();

  $query = "
    SELECT COUNT(*) AS complete
      FROM activity
CROSS JOIN goal USING (goalid)
     WHERE csipid = :cid
       AND categoryid = :catid
       AND completed IS NOT NULL
";

  $sth = $dbh->prepare( $query );
  $sth->bindValue( ':cid', $csipid );
  $sth->bindValue( ':catid', $catid );
  $sth->execute();

  $result = $sth->fetch( PDO::FETCH_ASSOC );
  return $result['complete'];
}

function update_activity_fields( $activityid, $update ) {
  $dbh = db_connect();

  if ( loc_is_demo( 'activity', $activityid ) ) { return; }

  $people = array();
  if ( $update['people'] ) {
    $people = $update['people'];
    unset( $update['people'] );
  }

  // check authorization to update category class
  if ( $activityid || $update['goalid'] ) {
    if ( $activityid ) {
      $query = "
     SELECT category_class
       FROM activity
 CROSS JOIN goal USING (goalid)
 CROSS JOIN category USING (categoryid)
      WHERE activityid = :aid";
      $sth = $dbh->prepare( $query );
      $sth->bindValue( ':aid', $activityid );
    } else {
      $query = "
     SELECT category_class
       FROM goal
 CROSS JOIN category USING (categoryid)
      WHERE goalid = :gid";
      $sth = $dbh->prepare( $query );
      $sth->bindValue( ':gid', $update['goalid'] );
    }
    $sth->execute();
    $category_class = $sth->fetchColumn();
    if ( ( $category_class == 'CSIP' && ! authorized( 'update_csip' ) ) ||
	 ( $category_class == 'SAP' && ! authorized( 'update_sap' ) ) ) {
      return;
    }
  }

  if ( $activityid ) {
    $query = "UPDATE activity SET ";
    foreach ( $update as $field => $value ) {
      $query .= "$field = ?, ";
    }
    $query = rtrim( $query, ", " );
    $query .= "WHERE activityid = ". $dbh->quote( $activityid );
  } else {
    $query = "INSERT INTO activity (focus,activity,complete_date,completed,progress,report,goalid) VALUES (?,?,?,?,?,?,?)";
  }
  $sth = $dbh->prepare( $query );
  $sth->execute( array_values( $update ) );

  if ( ! $activityid ) {
    $activityid = $dbh->lastInsertId();
  }

  if ( $people ) {
    update_people_fields( $activityid, $people );
  }

  return $activityid;
}

function update_people_fields( $activityid, $people ) {
  $dbh = db_connect();

  foreach ( $people as $person ) {
    $person_id = $person['activity_people_id'];
    unset( $person['activity_people_id'] );
    if ( $person_id ) {
      if ( $person['delete'] ) {
	$query = "DELETE FROM activity_people WHERE activity_people_id = ?";
	$person = array( 'activity_people_id' => $person_id );
      } else {
	unset( $person['delete'] );
	$query = "UPDATE activity_people SET ";
	foreach ( $person as $field => $value ) {
	  $query .= "$field = ?, ";
	}
	$query = rtrim( $query, ", " );
	$query .= "WHERE activity_people_id = ". $dbh->quote( $person_id );
      }
    } else {
      unset( $person['delete'] );
      $query = "INSERT INTO activity_people (fullname,people_email,activityid) VALUES (?,?,?)";
      $person['activityid'] = $activityid;
    }
    $sth = $dbh->prepare( $query );
    $sth->execute( array_values( $person ) );
  }

  return;
}

function delete_activity( $activityid ) {
  if ( ! $activityid ) {
    return;
  }

  $dbh = db_connect();

  if ( loc_is_demo( 'activity', $activityid ) ) { return; }

  delete_activity_dependants( $activityid );

  $query = "DELETE FROM activity WHERE activityid = :aid";
  $sth = $dbh->prepare( $query );
  $sth->bindValue( ':aid', $activityid );
  $sth->execute();
}

function delete_activity_dependants( $activityid ) {
  $dbh = db_connect();

  $query = "DELETE FROM activity_people WHERE activityid = :aid";
  $sth = $dbh->prepare( $query );
  $sth->bindValue( ':aid', $activityid );
  $sth->execute();
}

function forward_activity( $activityid, $new_csip, $new_category ) {
  if ( ! $activityid || ! $new_csip || ! $new_category ) { return; }

  $dbh = db_connect();

  if ( loc_is_demo( 'activity', $activityid ) ) { return; }

  $query = "
 SELECT activity.*, version, goal, goal_email
   FROM activity
  CROSS JOIN goal USING (goalid)
  CROSS JOIN csip USING (csipid)
  CROSS JOIN year USING (yearid)
  WHERE activityid = :aid
";
  $sth = $dbh->prepare( $query );
  $sth->bindValue( ':aid', $activityid );
  $sth->execute();
  $result = $sth->fetch( PDO::FETCH_ASSOC );
  $old_version = $result['version'];
  $old_goal = $result['goal'];
  $old_email = $result['goal_email'];
  $old_activity = $result['activity'];
  $old_focus = $result['focus'];

  $query = "
 SELECT COUNT(goalid)
   FROM goal
  WHERE categoryid = :cid
    AND csipid = :csid
    AND goal LIKE :goal
    AND goal_email LIKE :email
";
  $sth = $dbh->prepare( $query );
  $sth->bindValue( ':cid', $new_category );
  $sth->bindValue( ':csid', $new_csip );
  $sth->bindValue( ':goal', $old_goal );
  $sth->bindValue( ':email', $old_email );
  $sth->execute();
  if ( $sth->fetchColumn() > 0 ) {
    $query = "
 SELECT goalid
   FROM goal
  WHERE categoryid = :cid
    AND csipid = :csid
    AND goal LIKE :goal
    AND goal_email LIKE :email
";
    $sth = $dbh->prepare( $query );
    $sth->bindValue( ':cid', $new_category );
    $sth->bindValue( ':csid', $new_csip );
    $sth->bindValue( ':goal', $old_goal );
    $sth->bindValue( ':email', $old_email );
    $sth->execute();
    $new_goal = $sth->fetchColumn();
  } else {
    $query = "INSERT INTO goal ( goal, goal_email, csipid, categoryid ) VALUES ( :goal, :email, :csip, :cat )";
    $sth = $dbh->prepare( $query );
    $sth->bindValue( ':goal', $old_goal );
    $sth->bindValue( ':email', $old_email );
    $sth->bindValue( ':csip', $new_csip );
    $sth->bindValue( ':cat', $new_category );
    $sth->execute();
    $new_goal = $dbh->lastInsertId();
  }

  $query = "INSERT INTO activity ( activity, focus, goalid ) VALUES ( :act, :focus, :goal )";
  $sth = $dbh->prepare( $query );
  $sth->bindValue( ':act', $old_activity );
  $sth->bindValue( ':focus', $old_focus );
  $sth->bindValue( ':goal', $new_goal );
  $sth->execute();

  $query = "UPDATE activity SET forwarded = 1 WHERE activityid = :aid";
  $sth = $dbh->prepare( $query );
  $sth->bindValue( ':aid', $activityid );
  $sth->execute();
}

?>
